name: Fuzz

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'scripts/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'scripts/**'

jobs:
  fuzz:
    name: Run ${{ matrix.fuzzer }}
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        fuzzer:
          - FUZZ_BasicTypes
          - FUZZ_StlContainers
          - FUZZ_UserDefinedDeferredFormat
          - FUZZ_UserDefinedDirectFormat
          - FUZZ_QueueStress
          - FUZZ_BinaryData

    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-19 main"
          sudo apt-get update
          for i in {1..3}; do
            sudo apt-get -o Acquire::Retries=3 install -y clang-19 libc++-19-dev libc++abi-19-dev && break || sleep 15
          done
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 100
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 100
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          echo "Disk after cleanup:"
          df -h
          cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure
        working-directory: ${{runner.workspace}}/build
        env:
          CXX: clang++-19
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_CXX_STANDARD=17 -DQUILL_BUILD_FUZZING=ON \
                -DQUILL_VERBOSE_MAKEFILE=ON $GITHUB_WORKSPACE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: |
          threads=`nproc`
          cmake --build . --config Release --parallel $threads

      - name: Run fuzzer ${{ matrix.fuzzer }}
        working-directory: ${{runner.workspace}}
        run: |
          python3 quill/fuzz/run_fuzzers.py \
            --duration 360 \
            --fuzzer ${{ matrix.fuzzer }} \
            --fuzzer-dir build/build/test

